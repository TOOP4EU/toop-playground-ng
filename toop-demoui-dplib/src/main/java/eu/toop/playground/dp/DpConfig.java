/**
 * Copyright 2021 - TOOP Project
 *
 * This file and its contents are licensed under the EUPL, Version 1.2
 * or – as soon they will be approved by the European Commission – subsequent
 * versions of the EUPL (the "Licence");
 *
 * You may not use this work except in compliance with the Licence.
 * You may obtain a copy of the Licence at:
 *
 *       https://joinup.ec.europa.eu/collection/eupl/eupl-text-eupl-12
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the Licence is distributed on an "AS IS" basis,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *
 * See the Licence for the specific language governing permissions and limitations under the Licence.
 */
// generated by tscfg 0.9.96 on Wed May 20 19:31:41 EEST 2020
// source: default.conf

package eu.toop.playground.dp;

public class DpConfig {

  public final DpConfig.Dp dp;
  public final DpConfig.Dp getDp() { return dp; }

  public static class Dp {
    public final Dp.Address address;
    public final String datasetDocument;
    public final String datasetGBM;
    public final String id;
    public final String idSchemeID;
    public final String name;
    public final Dp.Address getAddress() { return address; }

    public final String getDatasetDocument() { return datasetDocument; }
    public final String getDatasetGBM() { return datasetGBM; }
    public final String getId() { return id; }
    public final String getIdSchemeID() { return idSchemeID; }
    public final String getName() { return name; }

    public static class Address {
      public final String buildingNumber;
      public final String city;
      public final String countryCode;
      public final String fullAddress;
      public final String postalCode;
      public final String streetName;
      public final String getBuildingNumber() { return buildingNumber; }
      public final String getCity() { return city; }
      public final String getCountryCode() { return countryCode; }
      public final String getFullAddress() { return fullAddress; }
      public final String getPostalCode() { return postalCode; }
      public final String getStreetName() { return streetName; }
      
      public Address(com.typesafe.config.Config c, java.lang.String parentPath, $TsCfgValidator $tsCfgValidator) {
        this.buildingNumber = c.hasPathOrNull("buildingNumber") ? c.getString("buildingNumber") : "1";
        this.city = c.hasPathOrNull("city") ? c.getString("city") : "EloniaCity";
        this.countryCode = c.hasPathOrNull("countryCode") ? c.getString("countryCode") : "SV";
        this.fullAddress = c.hasPathOrNull("fullAddress") ? c.getString("fullAddress") : "EloniaStreet 1, 12345, EloniaCity, SV";
        this.postalCode = c.hasPathOrNull("postalCode") ? c.getString("postalCode") : "12345";
        this.streetName = c.hasPathOrNull("streetName") ? c.getString("streetName") : "EloniaStreet";
      }
    }
    
    public Dp(com.typesafe.config.Config c, java.lang.String parentPath, $TsCfgValidator $tsCfgValidator) {
      this.address = c.hasPathOrNull("address") ? new Dp.Address(c.getConfig("address"), parentPath + "address.", $tsCfgValidator) : new Dp.Address(com.typesafe.config.ConfigFactory.parseString("address{}"), parentPath + "address.", $tsCfgValidator);
      this.datasetDocument = c.hasPathOrNull("datasetDocument") ? c.getString("datasetDocument") : "datasets/document";
      this.datasetGBM = c.hasPathOrNull("datasetGBM") ? c.getString("datasetGBM") : "datasets/gbm";
      this.id = c.hasPathOrNull("id") ? c.getString("id") : "1234";
      this.idSchemeID = c.hasPathOrNull("idSchemeID") ? c.getString("idSchemeID") : "VAT";
      this.name = c.hasPathOrNull("name") ? c.getString("name") : "Elonia Business Register";
    }
  }
  
  public DpConfig(com.typesafe.config.Config c) {
    final $TsCfgValidator $tsCfgValidator = new $TsCfgValidator();
    final java.lang.String parentPath = "";
    this.dp = c.hasPathOrNull("dp") ? new DpConfig.Dp(c.getConfig("dp"), parentPath + "dp.", $tsCfgValidator) : new DpConfig.Dp(com.typesafe.config.ConfigFactory.parseString("dp{}"), parentPath + "dp.", $tsCfgValidator);
    $tsCfgValidator.validate();
  }
  private static final class $TsCfgValidator  {
    private final java.util.List<java.lang.String> badPaths = new java.util.ArrayList<>();
    
    void addBadPath(java.lang.String path, com.typesafe.config.ConfigException e) {
      badPaths.add("'" + path + "': " + e.getClass().getName() + "(" + e.getMessage() + ")");
    }
    
    void validate() {
      if (!badPaths.isEmpty()) {
        java.lang.StringBuilder sb = new java.lang.StringBuilder("Invalid configuration:");
        for (java.lang.String path : badPaths) {
          sb.append("\n    ").append(path);
        }
        throw new com.typesafe.config.ConfigException(sb.toString()) {};
      }
    }
  }
}
      
